
/**
 * Demo Script - DNS Amplification Attack Educational Simulator
 * 
 * M√¥ ph·ªèng t·ªïng h·ª£p c√°c kh√≠a c·∫°nh c·ªßa DNS Amplification Attack
 * CH·ªà D√ÄNH CHO M·ª§C ƒê√çCH GI√ÅO D·ª§C V√Ä NGHI√äN C·ª®U
 */

const { DNSAmplificationSimulator } = require('./dns_amplification_simulator');
const { IPSpoofingSimulator } = require('./ip_spoofing_simulator');

async function runFullDemo() {
    console.log('\n' + '='.repeat(80));
    console.log('         üéì DNS AMPLIFICATION ATTACK EDUCATIONAL DEMO');
    console.log('='.repeat(80));

    console.log('\nüìö PH·∫¶N 1: GI·∫¢I TH√çCH NGUY√äN L√ù IP SPOOFING');
    console.log('-'.repeat(50));

    const ipSimulator = new IPSpoofingSimulator();
    ipSimulator.explainIPSpoofing();

    console.log('\nüìö PH·∫¶N 2: M√î PH·ªéNG IP SPOOFING (GI√ÅO D·ª§C)');
    console.log('-'.repeat(50));

    ipSimulator.simulateSpoofedDNSQuery('google.com');

    console.log('\nüìö PH·∫¶N 3: M√î PH·ªéNG DNS AMPLIFICATION ATTACK');
    console.log('-'.repeat(50));

    const dnsSimulator = new DNSAmplificationSimulator();

    // Ch·∫°y m√¥ ph·ªèng v·ªõi tham s·ªë nh·ªè ƒë·ªÉ kh√¥ng g√¢y t·∫£i
    await dnsSimulator.simulateBotnetAttack('google.com', 2);

    console.log('\nüìö PH·∫¶N 4: K·∫æT LU·∫¨N V√Ä B√åNH LU·∫¨N');
    console.log('-'.repeat(50));

    console.log('\nüîç C√ÅC ƒêI·ªÇM QUAN TR·ªåNG C·∫¶N GHI NH·ªö:');
    console.log('\n1. üéØ M·ª§C TI√äU C·ª¶A CU·ªòC T·∫§·ªêNG:');
    console.log('   ‚Ä¢ T·∫°o l∆∞u l∆∞·ª£ng m·∫°ng kh·ªïng l·ªì v·ªõi chi ph√≠ t·ªëi thi·ªÉu');
    console.log('   ‚Ä¢ L√†m qu√° t·∫£i bƒÉng th√¥ng v√† t√†i nguy√™n c·ªßa m·ª•c ti√™u');
    console.log('   ‚Ä¢ G√¢y t·ª´ ch·ªëi d·ªãch v·ª• cho ng∆∞·ªùi d√πng h·ª£p ph√°p\n');

    console.log('2. üîß C√ÅC Y·∫æU T·ªê C·∫¶N THI·∫æT:');
    console.log('   ‚Ä¢ Botnet ƒë·ªÉ th·ª±c hi·ªán t·∫•n c√¥ng ph√¢n t√°n');
    console.log('   ‚Ä¢ Kh·∫£ nƒÉng gi·∫£ m·∫°o IP (IP spoofing)');
    console.log('   ‚Ä¢ T·ªìn t·∫°i c√°c DNS resolver m·ªü tr√™n Internet');
    console.log('   ‚Ä¢ S·ª± b·∫•t c√¢n x·ª©ng v·ªÅ k√≠ch th∆∞·ªõc query vs response\n');

    console.log('3. üõ°Ô∏è T√çNH HI·ªÜU QU·∫¢ C·ª¶A BI·ªÜN PH√ÅP PH√íNG CH·ªêNG:');
    console.log('   ‚Ä¢ Tri·ªÉn khai BCP 38 c√≥ th·ªÉ ngƒÉn ch·∫∑n ho√†n to√†n IP spoofing');
    console.log('   ‚Ä¢ C·∫•u h√¨nh DNS server ƒë√∫ng c√°ch gi·∫£m thi·ªÉu amplification');
    console.log('   ‚Ä¢ DDoS mitigation services c√≥ th·ªÉ ph√°t hi·ªán v√† l·ªçc attack traffic');
    console.log('   ‚Ä¢ Network monitoring gi√∫p ph√°t hi·ªán s·ªõm c√°c d·∫•u hi·ªáu t·∫•n c√¥ng\n');

    console.log('4. üìà T·∫¶M QUAN TR·ªåNG TRONG B·∫¢O M·∫¨T M·∫†NG:');
    console.log('   ‚Ä¢ DNS Amplification l√† m·ªôt trong nh·ªØng d·∫°ng DDoS ph·ªï bi·∫øn nh·∫•t');
    console.log('   ‚Ä¢ Hi·ªÉu r√µ c∆° ch·∫ø gi√∫p x√¢y d·ª±ng h·ªá th·ªëng ph√≤ng th·ªß hi·ªáu qu·∫£');
    console.log('   ‚Ä¢ C·∫ßn s·ª± ph·ªëi h·ª£p gi·ªØa ISP, DNS operators v√† end users');
    console.log('   ‚Ä¢ Gi√°o d·ª•c v√† n√¢ng cao nh·∫≠n th·ª©c l√† ch√¨a kh√≥a ph√≤ng ch·ªëng\n');

    console.log('üéì KHAI TH√ÅC TRONG GI√ÅO D·ª§C:');
    console.log('   ‚Ä¢ S·ª≠ d·ª•ng trong c√°c kh√≥a h·ªçc v·ªÅ b·∫£o m·∫≠t m·∫°ng');
    console.log('   ‚Ä¢ Hu·∫•n luy·ªán SOC analysts v·ªÅ pattern recognition');
    console.log('   ‚Ä¢ Ph√°t tri·ªÉn k·ªπ nƒÉng incident response');
    console.log('   ‚Ä¢ Nghi√™n c·ª©u v√† ph√°t tri·ªÉn countermeasures\n');

    console.log('‚ö†Ô∏è  L∆ØU √ù PH√ÅP L√ù CU·ªêI C√ôNG:');
    console.log('   ‚Ä¢ M·ªçi ho·∫°t ƒë·ªông ph·∫£i tu√¢n th·ªß lu·∫≠t ph√°p ƒë·ªãa ph∆∞∆°ng');
    console.log('   ‚Ä¢ Ch·ªâ th·ª±c hi·ªán tr√™n h·ªá th·ªëng ƒë∆∞·ª£c ·ªßy quy·ªÅn');
    console.log('   ‚Ä¢ Kh√¥ng s·ª≠ d·ª•ng ki·∫øn th·ª©c n√†y ƒë·ªÉ l√†m h·∫°i ng∆∞·ªùi kh√°c');
    console.log('   ‚Ä¢ B√°o c√°o c√°c l·ªó h·ªïng ph√°t hi·ªán ƒë∆∞·ª£c cho c√°c b√™n li√™n quan\n');

    console.log('='.repeat(80));
    console.log('           ‚úÖ HO√ÄN TH√ÄNH DEMO GI√ÅO D·ª§C - C·∫¢M ∆†N B·∫†N ƒê√É THAM GIA!');
    console.log('='.repeat(80));
}

// Export cho vi·ªác import
module.exports = {
    runFullDemo
};

// Ch·∫°y demo n·∫øu file ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
    runFullDemo().catch(error => {
        console.error('‚ùå L·ªói khi ch·∫°y demo:', error);
    });
}
